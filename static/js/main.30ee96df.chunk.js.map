{"version":3,"sources":["components/stepCard.js","components/card.js","landing/landing.js","App.js","serviceWorker.js","index.js"],"names":["StepCard","props","class","style","margin","background","bckg","color","number","stepTitle","text","Card","title","Landing","id","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6RAmBeA,MAjBf,SAAkBC,GAEd,OACI,yBAAKC,MAAM,WAAWC,MAAO,CAACC,OAAQH,EAAMG,SAExC,yBAAKF,MAAM,aAAYC,MAAO,CAACE,WAAYJ,EAAMK,OAAQ,uBAAGH,MAAO,CAACI,MAAON,EAAMM,QAASN,EAAMO,SAGjG,yBAAKN,MAAM,aACV,0BAAMA,MAAM,iBAAiBD,EAAMQ,WACnC,uBAAGP,MAAM,YAAYD,EAAMS,S,MCExBC,MAXf,SAAcV,GAEV,OACI,yBAAKC,MAAM,cACP,0BAAMA,MAAM,YAAaD,EAAMW,OAC/B,0BAAMV,MAAM,WAAWD,EAAMS,Q,MCgD1BG,MAnDf,WACI,OACI,8BACI,iCACI,yBAAKX,MAAM,cACP,yBAAKA,MAAM,aACP,wBAAIA,MAAM,SAAV,2BAEA,0DACA,yBAAKA,MAAM,iBACP,4BAAQA,MAAM,oBAAd,QACJ,4BAAQA,MAAM,uBAAd,oBAIJ,yBAAKA,MAAM,aACP,qLAMZ,6BAASA,MAAM,cACX,4CAGA,kBAAC,EAAD,CAAUM,OAAO,IAAIF,KAAK,UAAUF,OAAO,oBAAoBG,MAAM,QAAQE,UAAU,iBAAiBC,KAAK,0IAG7G,kBAAC,EAAD,CAAUF,OAAO,IAAIF,KAAK,UAAUF,OAAO,kBAAkBG,MAAM,QAAQE,UAAU,WAAWC,KAAK,uLACrG,kBAAC,EAAD,CAAUF,OAAO,IAAIF,KAAK,UAAUF,OAAO,kBAAkBK,UAAU,YAAYC,KAAK,sHACxF,kBAAC,EAAD,CAAUF,OAAO,IAAIF,KAAK,UAAUF,OAAO,kBAAkBK,UAAU,qBAAqBC,KAAK,0EAErG,6BAASR,MAAM,iBACX,kBAAC,EAAD,CAAMU,MAAM,QAAQF,KAAK,sBACzB,kBAAC,EAAD,CAAME,MAAM,QAAQF,KAAK,sBACzB,kBAAC,EAAD,CAAME,MAAM,QAAQF,KAAK,uBAE7B,6BAASI,GAAG,SAAZ,2yBAIJ,iCACI,yBAAKZ,MAAM,iBACK,4BAAQA,MAAM,yBAAd,QACJ,4BAAQA,MAAM,4BAAd,sBCvCTa,MARf,WACE,OACE,yBAAKC,UAAU,OACb,kBAAC,EAAD,QCMcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.30ee96df.chunk.js","sourcesContent":["import React from 'react';\r\nimport './stepCard.css'\r\nfunction StepCard(props) {\r\n\r\n    return(\r\n        <div class='stepCard' style={{margin: props.margin}}>\r\n            \r\n            <div class='spanNumber'style={{background: props.bckg}} ><p style={{color: props.color}}>{props.number}</p></div>\r\n                \r\n            \r\n           <div class='higherRow'> \r\n            <span class='spanStepTitle'>{props.stepTitle}</span>\r\n            <p class='spanText'>{props.text}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default StepCard;","import React from 'react';\r\nimport './card.css'\r\n\r\nfunction Card(props) {\r\n\r\n    return(\r\n        <div class='reviewCard'>\r\n            <span class='revTitle' >{props.title}</span>\r\n            <span class='revText'>{props.text}</span>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport StepCard from '../components/stepCard';\r\nimport Card from '../components/card';\r\n\r\nimport './landing.css'\r\nfunction Landing() {\r\n    return (\r\n        <main>\r\n            <section>\r\n                <div class='mainScreen' >\r\n                    <div class='titlePart'>\r\n                        <h1 class='title'>FABYEON BURGESS, Lawyer</h1>\r\n\r\n                        <h3>Your help when You need it</h3>\r\n                        <div class='button-wraper' >\r\n                            <button class='actionButton red' >Call</button>\r\n                        <button class='actionButton yellow' >Leave an email</button>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div class='greenPart'>\r\n                        <h2>\r\n                            We revolutionize the help to the people. Lawyer is not a headache, but a friend. We protect your interests and provide transparency in every move.\r\n                    </h2>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section class='howItWorks'>\r\n                <h4>\r\n                    HOW IT WORKS\r\n            </h4>\r\n                <StepCard number='1' bckg='#f2c94c' margin='0 auto 1vw 13.5vw' color='black' stepTitle='First Contact:' text='You call us or write an email. We analyze\r\n                and then listen to your story. If we think we can\r\n                help to you - we schedule a meeting. ' ></StepCard>\r\n                <StepCard number='2' bckg='#56ccf2' margin='0 auto 1vw 46vw' color='black' stepTitle='Meeting:' text='You tell us your story and we gather facts. We ask question for better understanding, talk about your desired outcome and gather maximun information possible from a minimum time.' ></StepCard>\r\n                <StepCard number='3' bckg='#eb5757' margin='0 auto 1vw 13vw' stepTitle='Analysis:' text=' Here we analize your story, provide amount of hours case approximately will take, hourly price and our strategy.' ></StepCard>\r\n                <StepCard number='4' bckg='#27ae60' margin='0 auto 1vw 31vw' stepTitle='Start of the work:' text='We sign the contract, start our work and defending you in the court.' ></StepCard>\r\n            </section>\r\n            <section class='reviewSection'>\r\n                <Card title='Title' text='Short description' ></Card>\r\n                <Card title='Title' text='Short description' ></Card>\r\n                <Card title='Title' text='Short description' ></Card>\r\n            </section>\r\n            <section id='lorem'>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pharetra, turpis convallis consectetur urna viverra sem enim mi ut. Nunc pulvinar sit laoreet id sit tincidunt vulputate libero. Habitant fringilla semper vel amet, tellus magna id sed mattis. Viverra vitae augue sed integer. Enim aliquet metus lectus vel nec id ac risus, bibendum. Duis consectetur proin semper nisi, odio. Interdum magna maecenas platea nisi quis viverra. At tortor, quisque accumsan, sagittis quam vulputate. Augue aliquam pretium ultricies ut. Euismod quisque massa ut sed nulla lacus ullamcorper ac feugiat. Odio lacus viverra risus sollicitudin cras id pellentesque. A pharetra commodo elit lacus amet et in interdum mattis. Mauris et, tincidunt venenatis cursus condimentum laoreet. Vitae odio hendrerit egestas feugiat purus.\r\n            </section>\r\n        \r\n        <section>\r\n            <div class='button-wraper' >\r\n                            <button class='lowActionButton green' >Call</button>\r\n                        <button class='lowActionButton yellow-2' >Leave an email</button>\r\n                        </div>\r\n        </section></main>\r\n    )\r\n}\r\n\r\nexport default Landing;\r\n","import React from 'react';\nimport './App.css';\nimport Landing from './landing/landing'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Landing></Landing>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}